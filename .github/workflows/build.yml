name: Build and Test

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libsndfile1 libfftw3-dev

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg fftw

      - name: Install system dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # For Windows, we'll use conda for some dependencies
          echo "Installing dependencies on Windows"

      - name: Install UV
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Install package in editable mode
        run: |
          uv pip install -e .

      - name: Lint with flake8
        run: |
          uv run flake8 auto_mashupper --count --select=E9,F63,F7,F82 --show-source --statistics
          uv run flake8 auto_mashupper --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test import
        run: |
          uv run python -c "import auto_mashupper; print('AutoMashupper imported successfully')"

      - name: Test CLI
        run: |
          uv run automashupper --version

      - name: Run tests
        run: |
          uv run pytest tests/ -v --cov=auto_mashupper --cov-report=xml
        continue-on-error: true # Continue even if tests fail for now

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  build:
    runs-on: ubuntu-latest
    needs: run

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build package
        run: |
          python -m build
