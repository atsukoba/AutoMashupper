name: Build on Windows

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build and Test on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg

      - name: Install UV (Windows)
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv

      - name: Install dependencies with UV
        run: |
          uv sync --dev

      - name: Install additional Windows audio dependencies
        run: |
          uv pip install soundfile librosa

      - name: Install package in editable mode
        run: |
          uv pip install -e .

      - name: Lint with flake8
        run: |
          uv run flake8 auto_mashupper --count --select=E9,F63,F7,F82 --show-source --statistics
          uv run flake8 auto_mashupper --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test import
        run: |
          uv run python -c "import auto_mashupper; print('AutoMashupper imported successfully on Windows')"

      - name: Test CLI
        run: |
          uv run automashupper --version

      - name: Run tests
        run: |
          uv run pytest tests/ -v --cov=auto_mashupper --cov-report=xml
        env:
          PYTHONPATH: ${{ github.workspace }}
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: windows-build
          name: codecov-windows-build
          fail_ci_if_error: false

  package-windows:
    name: Build Windows Package
    runs-on: windows-latest
    needs: build-windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build package
        run: |
          python -m build
